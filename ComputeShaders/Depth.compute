#pragma kernel CSMain

float n_f;
float f;

uint width;
uint height;

float vDisW;
float vDisH;

Texture2D<float4> colorBuffer;
Texture2D<float> depthBuffer;

RWStructuredBuffer<float> data;

[numthreads(16,16,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	uint index = id.y*width + id.x;

	float3 colorBufferValue = colorBuffer[id.xy];
	uint r = (uint)(colorBufferValue.x * 255);
	uint g = (uint)(colorBufferValue.y * 255);
	uint b = (uint)(colorBufferValue.z * 255);

	float depthBufferValue = 1.0f - depthBuffer[id.xy];

	data[index*4 + 0] = -0.5f / (n_f * depthBufferValue + f) * ((float)width - id.x * 2 - 1.0f) / (vDisW);
	data[index*4 + 1] = +1.0f / (n_f * depthBufferValue + f);
	data[index*4 + 2] = -0.5f / (n_f * depthBufferValue + f) * ((float)height - id.y * 2 - 1.0f) / (vDisH);
	data[index*4 + 3] = pow(2, (r<128?-24:-23)) * ((r % 128) * 65536.0f + g * 256.0f + b + ((float)0x800000));
}